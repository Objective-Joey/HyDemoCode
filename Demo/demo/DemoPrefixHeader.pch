//
//  DemoPrefixHeader.pch
//  demo
//
//  Created by huangyi on 2018/11/10.
//  Copyright © 2018年 huangyi. All rights reserved.
//

#ifndef DemoPrefixHeader_pch
#define DemoPrefixHeader_pch


// 懒加载
#define Hy_Lazy(object, assignment) (object = object ?: assignment)

#define kTabBarHeight                   49
#define kNavigationBarHeight            44
#define kStatusBarHeight                [[UIApplication sharedApplication] statusBarFrame].size.height
#define kStatusBarDifferHeight          (kSafeAreaTop - 20)

//#define ISHaveFaceID  ([IDCMBioMetricAuthenticator faceIDAvailable])

#define adjustsScrollViewInsets_NO(scrollView,vc)\
do { \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Warc-performSelector-leaks\"") \
if ([UIScrollView instancesRespondToSelector:NSSelectorFromString(@"setContentInsetAdjustmentBehavior:")]) {\
[scrollView   performSelector:NSSelectorFromString(@"setContentInsetAdjustmentBehavior:") withObject:@(2)];\
} else {\
vc.automaticallyAdjustsScrollViewInsets = NO;\
}\
_Pragma("clang diagnostic pop") \
} while (0)


#define kSafeAreaTop        kWindowSafeAreaInset.top
#define kSafeAreaBottom     kWindowSafeAreaInset.bottom

#define kWindowSafeAreaInset \
({\
UIEdgeInsets returnInsets = UIEdgeInsetsMake(20, 0, 0, 0);\
UIWindow * keyWindow = [UIApplication sharedApplication].keyWindow;\
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Warc-performSelector-leaks\"") \
if ([keyWindow respondsToSelector:NSSelectorFromString(@"safeAreaInsets")]) {\
UIEdgeInsets inset = [[keyWindow valueForKeyPath:@"safeAreaInsets"] UIEdgeInsetsValue];\
returnInsets = inset;\
}\
_Pragma("clang diagnostic pop") \
(returnInsets);\
})\

#define ColorFromBinary(rgb) [UIColor colorWithRed:((rgb&0xff0000) >> 16)/255.0 green:((rgb&0xff00) >> 8)/255.0 blue:(rgb&0xff)/255.0 alpha:1.0]
#define RGBA(r,g,b,a) [UIColor colorWithRed:r/255.0 green:g/255.0 blue:b/255.0 alpha:a]
#define RGB(r,g,b) RGBA(r,g,b,1.0)
#define RandColor RGB(arc4random_uniform(255),arc4random_uniform(255),arc4random_uniform(255))

#define TitleColor RGB(51, 51, 51)
#define PageColor RGB(239, 244, 254)
#define NaviBackColor RGB(60,160,255)
#define SubTitleColor RGB(102, 102, 102)
#define SubSubTitleColor RGB(153, 153, 153)
#define RandColor RGB(arc4random_uniform(255),arc4random_uniform(255),arc4random_uniform(255))

#define KeyWindow [UIApplication sharedApplication].keyWindow
#define ScreenW [UIScreen mainScreen].bounds.size.width
#define ScreenH [UIScreen mainScreen].bounds.size.height
#define MainBounds [UIScreen mainScreen].bounds


#import "UIView+Extension.h"

#import <Masonry/Masonry.h>
#import <YYKit/YYKit.h>
#import <QMUIKit/QMUIKit.h>
#import <MJExtension/MJExtension.h>
#import <ReactiveObjC/ReactiveObjC.h>
#import <AFNetworking/AFNetworking.h>
#import "UIScrollView+Refresh.h"
#import "RACCommand+Extension.h"
#import "RACSubject+Extension.h"
#import "RACSignal+Extension.h"
#import "RACSignal+Network.h"
#import "RACCommand+Network.h"
#import <MJRefresh/MJRefresh.h>
#import "MBProgressHUD.h"
#import "UICollectionView+HYExtension.h"
#import "UITableView+HYExtension.h"
#import "MBProgressHUD+HYExtension.h"
#import "MBProgressHUD+EmptyView.h"
#import "HYBaseNaviController.h"
#import "HYBaseTabBarController.h"
#import "UIImageView+HYExtension.h"
#import "HYJumpConrollerTool.h"
#import "HYBaseViewModel.h"
#import "HYBaseModel.h"
#import "HYRunTimeTool.h"
#import "RACSubject+Extension.h"
#import "RACCommand+Extension.h"
#import "RACSignal+Extension.h"
#import "RACCommand+JumpMediator.h"
#import "RACSignal+JumpMediator.h"

#endif /* DemoPrefixHeader_pch */
